The ''7-base_geometry'' module
==============================

check for docstrings
--------------------
module
------
    >>> m_doc = __import__("7-base_geometry").__doc__
    >>> len(m_doc) > 1
    True

class
-----
    >>> c_doc = __import__("7-base_geometry").BaseGeometry.__doc__
    >>> len(c_doc) > 1
    True

area method
-----------
    >>> method = __import__("7-base_geometry").BaseGeometry.area.__doc__
    >>> len(method) > 1
    True

integer_validator method
------------------------
    >>> method = __import__("7-base_geometry").BaseGeometry.integer_validator.__doc__
    >>> len(method) > 1
    True

import BaseGeometry class from ''7-base_geometry'' module
    >>> big_geo = __import__('7-base_geometry').BaseGeometry

checking for area
    >>> figure = big_geo()
    >>> figure.area()
    Traceback (most recent call last):
        ...
    Exception: area() is not implemented

1 argument to area
    >>> figure.area(2)
    Traceback (most recent call last):
        ...
    TypeError: area() takes 1 positional argument but 2 were given

checking integer_validator with positive integer
    >>> figure.integer_validator("Peter", 1)

checking integer_validator with 0
    >>> figure.integer_validator("Peter", 0)
    Traceback (most recent call last):
        ...
    ValueError: Peter must be greater than 0

checking integer_validator with negative integer
    >>> figure.integer_validator("Peter", -3)
    Traceback (most recent call last):
        ...
    ValueError: Peter must be greater than 0

checking integer_validator with string
    >>> figure.integer_validator("Peter", "string")
    Traceback (most recent call last):
        ...
    TypeError: Peter must be an integer

checking integer_validator with float
    >>> figure.integer_validator("Peter", 2.3)
    Traceback (most recent call last):
        ...
    TypeError: Peter must be an integer

1 argument to integer_validator
    >>> figure.integer_validator(7)
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 1 required positional argument: 'value'

too many arguments to integer_validator
    figure.integer_validator("Peter", 7, 8, 9)
    Traceback (most recent call last):
        ...
    TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 5 were given

no arguments to integer_validator
    >>> figure.integer_validator()
    Traceback (most recent call last):
        ...
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

checking integer_validator with a tuple
    >>> figure.integer_validator("Peter", (7, 8))
    Traceback (most recent call last):
        ...
    TypeError: Peter must be an integer

checking integer_validator with a complex number
    >>> figure.integer_validator("Peter", complex(3,5j))
    Traceback (most recent call last):
        ...
    TypeError: Peter must be an integer

checking integer_validator with a list
    >>> figure.integer_validator("Peter", [6,8])
    Traceback (most recent call last):
        ...
    TypeError: Peter must be an integer
